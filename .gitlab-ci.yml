stages:
  - build
  - test

image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_HUB_USER: $DOCKER_HUB_USER
  DOCKER_HUB_PASSWORD: $DOCKER_HUB_PASSWORD

before_script:
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD

# Build Jobs

build-backend:
  stage: build
  before_script:
    - echo "BUILDING BACKEND . . ."
    # Get image from docker hub
    - docker pull fellipearaujo/gces_backend
  script:
    - docker build --cache-from fellipearaujo/gces_backend ./backend
    # publish image on the docker hub
    - docker push fellipearaujo/gces_backend
  after_script:
    - echo "BACKEND SUCCESSFULLY BUILT."

build-frontend:
  stage: build
  before_script:
    - echo "BUILDING FRONTEND . . ."
    # Get image from docker hub
    - docker pull fellipearaujo/gces_frontend
  script:
    - docker build --cache-from fellipearaujo/gces_frontend ./frontend
    # publish image on the docker hub
    - docker push fellipearaujo/gces_frontend
  after_script:
    - echo "FRONTEND SUCCESSFULLY BUILT."

# Tests Jobs

test-backend:
  stage: test
  image: docker/compose:stable
  before_script:
    - echo "TESTING BACKEND . . ."
  script:
    - docker-compose run --entrypoint "npm run unittest" backend
  after_script:
    - echo "BACKEND SUCCESSFULLY TESTED."

test-frontend:
  stage: test
  image: docker/compose:stable
  before_script:
    - echo "TESTING FRONTEND . . ."
  script:
    - docker-compose run --entrypoint "npm run coverage" frontend
    # publish image on the docker hub
  after_script:
    - echo "FRONTEND SUCCESSFULLY TESTED."