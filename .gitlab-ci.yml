stages:
  - build
  - test

image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_HUB_USERNAME:  $DOCKER_HUB_USERNAME
  DOCKER_HUB_PASSWORD:  $DOCKER_HUB_PASSWORD

# Build Jobs

build-backend:
  stage: build
  before_script:
    - echo "BUILDING BACKEND . . ."
    - echo "$DOCKER_HUB_PASSWORD" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
  script:
    - docker build -f ./backend/Dockerfile -t $DOCKER_HUB_USERNAME/gces_backend:build_back ./backend
    # publish image on the docker hub
    - docker push $DOCKER_HUB_USERNAME/gces_backend:build_back
  after_script:
    - echo "BACKEND SUCCESSFULLY BUILT."

build-frontend:
  stage: build
  before_script:
    - echo "BUILDING FRONTEND . . ."
    - echo "$DOCKER_HUB_PASSWORD" | docker login --username $DOCKER_HUB_USERNAME --password-stdin
  script:
    - docker build -f ./frontend/Dockerfile -t $DOCKER_HUB_USERNAME/gces_frontend:build_front ./frontend
    # publish image on the docker hub
    - docker push $DOCKER_HUB_USERNAME/gces_frontend:build_front
  after_script:
    - echo "FRONTEND SUCCESSFULLY BUILT."

# Tests Jobs

test-backend:
  stage: test
  image: docker/compose:stable
  before_script:
    - echo "TESTING BACKEND . . ."
  script:
    - docker-compose run --entrypoint "npm run unittest" backend
  after_script:
    - echo "BACKEND SUCCESSFULLY TESTED."

test-frontend:
  stage: test
  image: docker/compose:stable
  before_script:
    - echo "TESTING FRONTEND . . ."
  script:
    - docker-compose run --entrypoint "npm run coverage" frontend
  after_script:
    - echo "FRONTEND SUCCESSFULLY TESTED."